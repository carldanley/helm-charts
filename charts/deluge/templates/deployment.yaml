apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deluge.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "deluge.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 5
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "deluge.labels" . | nindent 8 }}
    spec:
      containers:
      - name: deluge
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8112
        - name: daemon
          containerPort: 58846
        - name: incoming-tcp
          containerPort: 53160
          protocol: TCP
        - name: incoming-udp
          containerPort: 53160
          protocol: UDP
        env:
        - name: PUID
          value: {{ .Values.puid | quote }}
        - name: PGID
          value: {{ .Values.pgid | quote }}
        - name: TZ
          value: {{ .Values.timezone | quote }}
        resources:
          {{- toYaml .Values.resources | trim | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: false
        - name: downloads
          mountPath: /downloads
          readOnly: false
      volumes:
      - name: downloads
        {{- if .Values.volumes.download }}
          {{ toYaml .Values.volumes.download | nindent 8 }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: config
        {{- if .Values.volumes.config }}
          {{ toYaml .Values.volumes.config | nindent 8 }}
        {{- else }}
        emptyDir: {}
        {{- end }}
