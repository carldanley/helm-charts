drone:
  rpcSecret: "replace-me"

  server:
    replicaCount: 1
    image:
      repository: docker.io/drone/drone
      tag: "1.10.1"
      pullPolicy: IfNotPresent
    host: chart-example.local
    protocol: https
    debug: false
    database:
      driver: "mysql"
      connectionString: "drone:drone@tcp(mysql.drone:3306)/drone?parseTime=true"
    github:
      clientId: "replace-me"
      clientSecret: "replace-me"
    createUser: "username:admin,admin:true"
    userFilter: "admin"
    resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  agent:
    replicaCount: 3
    image:
      repository: docker.io/drone/drone-runner-kube
      tag: "1.0.0-beta.6"
      pullPolicy: IfNotPresent
    debug: false
    resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

podAnnotations: {}
  # backup.velero.io/backup-volumes: data

rbac:
  enabled: true

persistence:
  enabled: false
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  size: 1Gi
  veleroSchedule:
    enabled: true
    schedule: "0 */6 * * *"
    ttl: "168h"
    includedNamespaces: []

service:
  type: ClusterIP
  http:
    port: 80
  https:
    port: 443

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths: []
    # - /
  tls: {}
  # - secretName: chart-example-tls
  #   hosts:
  #   - chart-example.local
