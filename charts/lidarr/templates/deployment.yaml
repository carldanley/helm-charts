apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "lidarr.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "lidarr.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 5
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "lidarr.labels" . | nindent 8 }}
    spec:
      containers:
      - name: lidarr
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8686
        env:
        - name: PUID
          value: {{ .Values.puid | quote }}
        - name: PGID
          value: {{ .Values.pgid | quote }}
        - name: TZ
          value: {{ .Values.timezone | quote }}
        volumeMounts:
        - name: downloads
          mountPath: /downloads
          readOnly: false
        - name: music
          mountPath: /music
          readOnly: false
        - name: config
          mountPath: /config
          readOnly: false
      volumes:
      - name: music
      {{- if .Values.volumes.music -}}
        {{ toYaml .Values.volumes.music | nindent 8 }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: downloads
      {{- if .Values.volumes.downloads -}}
        {{ toYaml .Values.volumes.downloads | nindent 8 }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: config
      {{- if .Values.volumes.config -}}
        {{ toYaml .Values.volumes.config | nindent 8 }}
      {{- else }}
        emptyDir: {}
      {{- end }}
